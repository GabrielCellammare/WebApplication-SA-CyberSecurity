package application.util;
import java.io.IOException;
import java.io.InputStream;
import javax.servlet.http.Part;
import org.apache.tika.metadata.Metadata;
import org.apache.tika.parser.AutoDetectParser;
import org.apache.tika.parser.ParseContext;
import org.apache.tika.parser.Parser;
import org.apache.tika.sax.BodyContentHandler;


public class ModifyChecker {

	public static String getLastModify(Part filePart) {
        Parser parser = new AutoDetectParser();
        BodyContentHandler handler = new BodyContentHandler();
        Metadata metadata = new Metadata();

        try (InputStream inputStream = filePart.getInputStream()) {
            parser.parse(inputStream, handler, metadata, new ParseContext());
        } catch (IOException e) {
            // Usa un logger per registrare l'errore
            e.printStackTrace();
        } catch (Exception e) {
            // Gestisci le eccezioni specifiche di SAX e Tika
            e.printStackTrace();
        }

        // Controlla se il metadato LAST_MODIFIED è presente e restituiscilo
        String lastModified = metadata.get(Metadata.LAST_MODIFIED);
        return (lastModified != null) ? lastModified : "Nessuna data di modifica disponibile";
    }
}