package application.Servlet.userNotLogged;

import java.io.IOException;
import java.util.Arrays;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;


import application.util.EmailChecker;
import application.util.FileChecker;
import application.util.PasswordManager;
import customMessage.DisplayMessage;

/**
 * Servlet implementation class RegistrationServlet
 */

@MultipartConfig
@WebServlet("/RegistrationServlet")
public class RegistrationServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public RegistrationServlet() {
        super();
        // TODO Auto-generated constructor stub
    }


	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		String email = request.getParameter("email");
		byte[] password = request.getParameter("password").getBytes();
		byte[] retypePassword = request.getParameter("retype-password").getBytes();
		Part filePart = request.getPart("profileImage");

		if (EmailChecker.isValidEmail(email)) {
			if (PasswordManager.isStrongPassword(password)) {
				if (Arrays.equals(password, retypePassword)) {
					if (FileChecker.checkImageFile(filePart)) {
						System.out.println("File valido");

						byte[] salt = PasswordManager.generateRandomBytes(16);
						byte[] SaltedPassword = PasswordManager.concatenateAndHash(password, salt);

						try {
							if (true){//RegistrazioneDao.userRegistration(email, SaltedPassword, salt, filePart)) {

								email = null;
								PasswordManager.clearBytes(SaltedPassword);
								PasswordManager.clearBytes(password);
								PasswordManager.clearBytes(retypePassword);
								PasswordManager.clearBytes(salt);

								response.sendRedirect("login.jsp");
							} else {

								email = null;
								PasswordManager.clearBytes(SaltedPassword);
								PasswordManager.clearBytes(password);
								PasswordManager.clearBytes(retypePassword);
								PasswordManager.clearBytes(salt);
								DisplayMessage.showPanel("Errore durante la registrazione!");
								request.getRequestDispatcher("registration.jsp").forward(request, response);
								
							}
						} catch (Exception e) {
							e.printStackTrace();
							DisplayMessage.showPanel("Errore durante la registrazione!");
							request.getRequestDispatcher("registration.jsp").forward(request, response);
						}
					} else {
						DisplayMessage.showPanel("Immagine non valida!");
						request.getRequestDispatcher("registration.jsp").forward(request, response);

					}
				} else {
					DisplayMessage.showPanel("Le password non corrispondono!");
					request.getRequestDispatcher("registration.jsp").forward(request, response);

				}
			} else {
				DisplayMessage.showPanel("La password non rispetta i requisiti minimi di sicurezza!");
				request.getRequestDispatcher("registration.jsp").forward(request, response);

			}

		} else {

			DisplayMessage.showPanel("Il nome contiene caratteri non validi!");
			request.getRequestDispatcher("registration.jsp").forward(request, response);

		}
	}

}
