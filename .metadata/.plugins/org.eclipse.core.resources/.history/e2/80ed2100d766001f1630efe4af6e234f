package controller.Servlet.userLogged;

import java.io.IOException;
import java.util.Base64;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import application.util.customMessage.DisplayMessage;
import model.Dao.CookieDAO;
public class AuthenticationFilter implements Filter {

	public void init(FilterConfig config) throws ServletException {
		// Inizializzazione se necessaria
	}

	package controller.Servlet.userLogged;

	import java.io.IOException;
	import java.util.Base64;
	import javax.servlet.Filter;
	import javax.servlet.FilterChain;
	import javax.servlet.FilterConfig;
	import javax.servlet.ServletException;
	import javax.servlet.ServletRequest;
	import javax.servlet.ServletResponse;
	import javax.servlet.http.Cookie;
	import javax.servlet.http.HttpServletRequest;
	import javax.servlet.http.HttpServletResponse;
	import javax.servlet.http.HttpSession;

	import application.util.customMessage.DisplayMessage;
	import model.Dao.CookieDAO;

	public class AuthenticationFilter implements Filter {

		public void init(FilterConfig config) throws ServletException {
			// Inizializzazione se necessaria
		}

		@Override
		public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
				throws IOException, ServletException {

			HttpServletRequest httpRequest = (HttpServletRequest) request;
			HttpServletResponse httpResponse = (HttpServletResponse) response;

			// Imposta le intestazioni di cache
			httpResponse.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
			httpResponse.setHeader("Pragma", "no-cache");
			httpResponse.setDateHeader("Expires", 0);

			HttpSession session = httpRequest.getSession(false);
			boolean isLoggedIn = (session != null && session.getAttribute("email") != null);

			// Se l'utente è già autenticato
			if (isLogge

					@Override
					public void destroy() {
				// Pulizia se necessaria
			}
		}
