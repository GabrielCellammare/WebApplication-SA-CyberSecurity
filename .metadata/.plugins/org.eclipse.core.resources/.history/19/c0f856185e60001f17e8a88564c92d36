<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>

<head>
<title>Homepage Web Application</title>
    
 <style>
 <%@include file="/WEB-INF/css/styleIndexLogged.css"%>
 </style>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
</head>
<body>
    <div class="navbar">
        <h1>Proposte progettuali</h1>
        <div class="navbar-buttons">
            <a href="caricaProposta.jsp" class="button">Carica Proposta</a>
             <a href="logout.jsp" class="button">Logout</a>
        </div>
    </div>
    <div class="container">
        <!-- Qui puoi inserire il codice per visualizzare le proposte progettuali -->
    </div>
</body>
</html>


<script>
	function uploadFile() {
		var formData = new FormData(document.getElementById('uploadForm'));

		$
				.ajax({
					url : 'PropostaServlet',
					type : 'POST',
					data : formData,
					processData : false,
					contentType : false,
					success : function(data) {
						// Aggiorna il contenuto del banner con il risultato della risposta AJAX
						$('#contenutoBanner').html(data);

					},
					error : function(xhr, status, error) {
						console.error(
								'Errore durante il caricamento del file:',
								status, error);
					}
				});
	}

	// Chiamata AJAX separata per caricare la lista delle proposte quando la pagina si carica
	$(document).ready(function() {
		caricaListaProposte();
	});

var scrittaAggiunta = false;

var isLogoutExecuted = false;
var isRefreshing = false;
var isProposteLoading = false;

// Funzione per caricare la lista delle proposte
function caricaListaProposte() {
    isProposteLoading = true;

    $.ajax({
        url: 'PropostaServlet',
        type: 'GET',
        dataType: 'json',
        success: function (data) {
            // Aggiorna la lista delle proposte nel banner
            var listaProposte = $('#listaProposteBanner');
            listaProposte.empty();

            // Aggiungo la scritta solo se non è stata ancora aggiunta
            if (!scrittaAggiunta) {
                listaProposte.append('<p><strong>Lista proposte progettuali</strong></p>');
                scrittaAggiunta = true; // Imposta la variabile a true dopo l'aggiunta
            }

            // Itera sulla lista delle proposte
            $.each(data, function (index, proposta) {
                // Utilizza un link anziché un paragrafo e aggiungi una classe per lo stile e l'interattività
                var link = $('<a>', {
                    class: 'file-link',
                    href: '#',
                    'data-nomefile': proposta.nomeFile,
                    'data-nomeutente': proposta.username,
                    'data-html': proposta.contenutoHtml,
                    text: 'Username: ' + proposta.username + ', Proposta: ' + proposta.nomeFile
                });
                listaProposte.append($('<li>').append(link));
            });

            
            // Aggiungo uno script jQuery per gestire il clic sul link del file
            $('.file-link').on('click', function (event) {
                event.preventDefault();
                var nomeFile = $(this).data('nomefile');
                var nomeUtente = $(this).data('nomeutente');
                var contenutoHtml = $(this).data('html');

                // Creazione del messaggio in grassetto
                var messaggio = "Stai visualizzando la proposta progettuale <strong>" + nomeFile + "</strong> di <strong>" + nomeUtente + "</strong>";

                
                // Visualizza il messaggio HTML nel banner
                $('#contenutoBanner').html('<p>' + messaggio + '</p>' + contenutoHtml);
            });
            isProposteLoading = false;

        },
        error: function (xhr, status, error) {
            console.error(
                'Errore durante il recupero della lista delle proposte:',
                status, error);
           		isProposteLoading = false;

        }
    });
}

var isLogoutExecuted = false;
var isRefreshing = false;


function logout() {
    if (!isLogoutExecuted) {
        // Effettua una chiamata al server per invalidare la sessione
        $.ajax({
            url: 'LogoutServlet',
            type: 'GET',
            success: function () {
                $('#listaProposteBanner').empty();
                localStorage.removeItem('nomeUtente');

                // Reindirizza alla pagina di login dopo il logout
                window.location.href = "login.jsp";
            },
            error: function (xhr, status, error) {
                console.error('Errore durante il logout:', status, error);
            }
        });
        isLogoutExecuted = true;
    }
}

//Gestisci il logout quando l'utente sta lasciando la pagina

window.addEventListener('beforeunload', function (event) {
    isRefreshing = true;

    console.log('beforeunload event');

    if (!event.persisted && !isLogoutExecuted && !isRefreshing && !isProposteLoading) {
        // Esegui la funzione di logout solo se necessario e non è un aggiornamento della pagina
                console.log('Performing logout');

        logout();
    }
});

// Gestisci il logout quando l'utente fa clic sul pulsante di navigazione del browser
window.addEventListener('popstate', function () {
    console.log('popstate event');

    if (!isLogoutExecuted && !isRefreshing) {
        // Esegui la funzione di logout solo se necessario
                console.log('Performing logout');

        logout();
    }
});


$(document).ready(function() {
      var inattivitaTimer; // Variabile per memorizzare l'ID del timer

    // Funzione chiamata quando l'utente compie un'azione
    function resetInattivitaTimer() {
        clearTimeout(inattivitaTimer); // Resetta il timer
        inattivitaTimer = setTimeout(function() {
            // Esegui la funzione di logout dopo il periodo di inattività
            logout();
        }, 600000); // 10minuti
    }

    // Chiamata quando la pagina si carica
    $(document).on('click keypress mousemove', function() {
        resetInattivitaTimer();
    });

});


function checkAuthentication() {
    var nomeUtente = "${nomeUtente}"; // Ottieni il valore dalla JSP
    console.log("Nome utente:", nomeUtente); // Aggiungi questa riga per stampare nella console

    if (!nomeUtente || nomeUtente.trim() === "") {
        window.location.href = "login.jsp";
    }
}

// Chiamata alla funzione durante il caricamento della pagina
document.addEventListener("DOMContentLoaded", function() {
    checkAuthentication();
    caricaListaProposte(); // Aggiunta la chiamata alla funzione caricaListaProposte
    
    // Quando la pagina è completamente caricata
    var contenutoBanner = $('#contenutoBanner');
    if (contenutoBanner.is(':empty')) {
        contenutoBanner.html('<p>Non stai visualizzando nessuna proposta</p>');
    }
});


</script>